<?xml version="1.0"?>
<syntax name="sourcecode.ruby">
  <zones>
    
    <!-- ============ -->
    <!-- = Comments = -->
    <!-- ============ -->
    
    <!-- # A comment -->
    <zone name="comment.line.hash.ruby">
      <expression>(#).*$\n?</expression>
      <capture number="1" name="punctuation.definition.comment.line.begin"/>
    </zone>
    
    <!--
      =begin
      A comment block
      =end
    -->
    <zone name="comment.block.ruby">
      <starts-with>
        <expression>^(=begin).*$</expression>
        <capture number="1" name="punctuation.definition.comment.block.begin"/>
      </starts-with>
      <ends-with>
        <expression>^(=end).*$</expression>
        <capture number="1" name="punctuation.definition.comment.block.end"/>
      </ends-with>
    </zone>
    
    <!-- ====================== -->
    <!-- = Syntactical blocks = -->
    <!-- ====================== -->
    
    <!--
      def something
        
      end
    -->
    <zone name="function.ruby">
      <starts-with>
        <expression>(def)\s+([a-zA-Z_][A-Za-z0-9_-]*)(?:(\(\s*)(.*)(\s*\)))?</expression>
        <capture number="1" name="storage.type.function.block.ruby"/> <!-- horribly unsemantic name for this, damn you TextMate naming conventions! -->
        <capture number="2" name="function.name"/>
        <capture number="3" name="punctuation.definition.parameters.begin"/>
        <capture number="4" name="variable.parameter.function.ruby"/>
        <capture number="5" name="punctuation.definition.parameters.end"/>
      </starts-with>
      <ends-with>
        <expression>end</expression>
        <capture number="0" name="storage.type.function.block.end.ruby"/> <!-- horribly unsemantic name for this, damn you TextMate naming conventions! -->
      </ends-with>
      <subzones>
        <include syntax="sourcecode.ruby"/>
      </subzones>
    </zone>
    
    <!-- ========================== -->
    <!-- = Syntactical constructs = -->
    <!-- ========================== -->
    
    <!-- 'A single-quoted string' -->
    <zone name="string.quoted.single.ruby">
      <starts-with>
        <expression>'</expression>
        <capture number="0" name="punctuation.definition.string.begin.ruby"/>
      </starts-with>
      <ends-with>
        <expression>'</expression>
        <capture number="0" name="punctuation.definition.string.end.ruby"/>
      </ends-with>
      <subzones>
        <zone name="constant.character.escape.ruby">
          <!-- 'A single-quoted string with \'escape sequences\'' -->
          <expression>\\('|\\)</expression>
          <capture number="0" name="punctuation.definition.string.escape.ruby"/>
        </zone>
      </subzones>
    </zone>
    
    <!-- "A double-quoted string" -->
    <zone name="string.quoted.double.ruby">
      <starts-with>
        <expression>"</expression>
        <capture number="0" name="punctuation.definition.string.begin.ruby"/>
      </starts-with>
      <ends-with>
        <expression>"</expression>
        <capture number="0" name="punctuation.definition.string.end.ruby"/>
      </ends-with>
      <subzones>
        <!-- "A double-quoted string with\nescape \"sequences\"" -->
        <zone name="constant.character.escape.ruby">
          <expression>\\(.)</expression>
          <capture number="0" name="punctuation.definition.string.escape.ruby"/>
        </zone>
        
        <!-- "A double-quoted string with #{interpolations}" -->
        <zone name="string.interpolation">
          <starts-with>
            <expression>#\{</expression>
            <capture number="0" name="punctuation.definition.string.interpolation.begin.ruby"/>
          </starts-with>
          <ends-with>
            <expression>\}</expression>
            <capture number="0" name="punctuation.definition.string.interpolation.end.ruby"/>
          </ends-with>
          <subzones>
            <include syntax="sourcecode.ruby"/>
          </subzones>
        </zone>
      </subzones>
    </zone>
    
    <!-- /regular expression/ -->
    <zone name="string.regexp.ruby">
      <starts-with>
        <expression>/</expression>
        <capture number="0" name="punctuation.definition.string.begin.ruby"/>
      </starts-with>
      <ends-with>
        <expression>(/)[igm]*</expression>
        <capture number="1" name="punctuation.definition.string.end.ruby"/>
      </ends-with>
      <subzones>
        <!-- /a regex with\nescape \/sequences\// -->
        <zone name="constant.character.escape.ruby">
          <expression>\\(.)</expression>
          <capture number="0" name="punctuation.definition.string.escape.ruby"/>
        </zone>
        
        <!-- /a regex with(?# comments)/ -->
        <zone name="string.regexp.comment.block.ruby">
          <starts-with>
            <expression>\(\?#</expression>
            <capture number="0" name="punctuation.definition.string.comment.block.begin.ruby"/>
          </starts-with>
          <ends-with>
            <expression>\)</expression>
            <capture number="0" name="punctuation.definition.string.comment.block.end.ruby"/>
          </ends-with>
        </zone>
        
        <!-- /a regex with #{interpolations}/ -->
        <zone name="string.interpolation">
          <starts-with>
            <expression>#\{</expression>
            <capture number="0" name="punctuation.definition.string.interpolation.begin.ruby"/>
          </starts-with>
          <ends-with>
            <expression>\}</expression>
            <capture number="0" name="punctuation.definition.string.interpolation.end.ruby"/>
          </ends-with>
          <subzones>
            <include syntax="sourcecode.ruby"/>
          </subzones>
        </zone>
      </subzones>
    </zone>
    
    <!-- 42, 052, 0x2A -->
    <zone name="constant.numeric.ruby">
      <expression>\b((0(x|X)[0-9a-fA-F]+)|(0[0-7]+)|((0|[1-9][0-9]*)(\.[0-9]+)?(e-?[0-9]+)?))\b</expression>
    </zone>
    
    <!-- ============ -->
    <!-- = Keywords = -->
    <!-- ============ -->
    
    <!-- true -->
    <zone name="constant.language.boolean.true.ruby">
      <expression>\btrue\b</expression>
    </zone>
    
    <!-- false -->
    <zone name="constant.language.boolean.false.ruby">
      <expression>\bfalse\b</expression>
    </zone>
    
    <!-- nil -->
    <zone name="constant.language.null.ruby">
      <expression>\bnil\b</expression>
    </zone>
    
    <!-- ======== -->
    <!-- = Meta = -->
    <!-- ======== -->
    
    <zone name="punctuation.terminator.statement.ruby">
      <expression>\;</expression>
    </zone>
    <zone name="meta.delimiter.object.comma.ruby">
      <expression>,[ |\t]*</expression>
    </zone>
    <zone name="meta.delimiter.method.period.ruby">
      <expression>\.</expression>
    </zone>
    <zone name="meta.brace.curly.open.ruby">
      <expression>\{</expression>
    </zone>
    <zone name="meta.brace.curly.close.ruby">
      <expression>\}</expression>
    </zone>
    <zone name="meta.brace.round.ruby">
      <expression>\(|\)</expression>
    </zone>
    <zone name="meta.brace.square.ruby">
      <expression>\[|\]</expression>
    </zone>
    
  </zones>
  
  <library>
    <collection name="nothing">
      
    </collection>
  </library>
</syntax>
