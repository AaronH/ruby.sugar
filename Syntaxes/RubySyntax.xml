<?xml version="1.0"?>
<syntax name="source.ruby">
    <zones>
        <zone name="meta.class.ruby">
            <expression>^\s*(class)\s+(([.a-zA-Z0-9_:]+(\s*(&lt;)\s*[.a-zA-Z0-9_:]+)?)|((&lt;&lt;)\s*[.a-zA-Z0-9_:]+))</expression>
            <capture number="1" name="keyword.control.class.ruby"/>
            <capture number="2" name="entity.name.type.class.ruby"/>
            <capture number="4" name="entity.other.inherited-class.ruby"/>
            <capture number="5" name="punctuation.separator.inheritance.ruby"/>
            <capture number="6" name="variable.other.object.ruby"/>
            <capture number="7" name="punctuation.definition.variable.ruby"/>
        </zone>
        <zone name="meta.module.ruby">
            <expression>^\s*(module)\s+(([A-Z]\w*(::))?([A-Z]\w*(::))?([A-Z]\w*(::))*[A-Z]\w*)</expression>
            <capture number="1" name="keyword.control.module.ruby"/>
            <capture number="2" name="entity.name.type.module.ruby"/>
            <capture number="3" name="entity.other.inherited-class.module.first.ruby"/>
            <capture number="4" name="punctuation.separator.inheritance.ruby"/>
            <capture number="5" name="entity.other.inherited-class.module.second.ruby"/>
            <capture number="6" name="punctuation.separator.inheritance.ruby"/>
            <capture number="7" name="entity.other.inherited-class.module.third.ruby"/>
            <capture number="8" name="punctuation.separator.inheritance.ruby"/>
        </zone>
        <zone name="invalid.deprecated.ruby">
            <expression>(?&lt;!\.)\belse(\s)+if\b</expression>
        </zone>
        <zone name="keyword.control.ruby">
            <expression>(?&lt;!\.)\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\b(?![?!])</expression>
        </zone>
        <zone name="keyword.control.start-block.ruby">
            <expression>(?&lt;!\.)\bdo\b\s*</expression>
        </zone>
        <zone name="meta.syntax.ruby.start-block">
            <expression>(?&lt;=\{)(\s+)</expression>
        </zone>
        <zone name="keyword.operator.logical.ruby">
            <expression>(?&lt;!\.)\b(and|not|or)\b</expression>
        </zone>
        <zone name="keyword.control.pseudo-method.ruby">
            <expression>(?&lt;!\.)\b(alias|alias_method|break|next|redo|retry|return|super|undef|yield)\b(?![?!])|\bdefined\?|\bblock_given\?</expression>
        </zone>
        <zone name="constant.language.ruby">
            <expression>\b(nil|true|false)\b(?![?!])</expression>
        </zone>
        <zone name="variable.language.ruby">
            <expression>\b(__(FILE|LINE)__|self)\b(?![?!])</expression>
        </zone>
        <zone name="keyword.other.special-method.ruby">
            <expression>\b(initialize|new|loop|include|extend|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|module_function|public|protected)\b(?![?!])</expression>
        </zone>
        <zone name="meta.require.ruby">
            <starts-with>
                <expression>\b(require)\b</expression>
                <capture number="1" name="keyword.other.special-method.ruby"/>
            </starts-with>
            <ends-with>
                <expression>$|(?=#)</expression>
                <capture number="1" name="keyword.other.special-method.ruby"/>
            </ends-with>
            <subzones>
                <include syntax="$self"/>
            </subzones>
        </zone>
        <zone name="variable.other.readwrite.instance.ruby">
            <expression>(@)[a-zA-Z_]\w*</expression>
            <capture number="1" name="punctuation.definition.variable.ruby"/>
        </zone>
        <zone name="variable.other.readwrite.class.ruby">
            <expression>(@@)[a-zA-Z_]\w*</expression>
            <capture number="1" name="punctuation.definition.variable.ruby"/>
        </zone>
        <zone name="variable.other.readwrite.global.ruby">
            <expression>(\$)[a-zA-Z_]\w*</expression>
            <capture number="1" name="punctuation.definition.variable.ruby"/>
        </zone>
        <zone name="variable.other.readwrite.global.pre-defined.ruby">
            <expression>(\$)(!|@|&amp;|`|'|\+|\d+|~|=|/|\\|,|;|\.|&lt;|>|_|\*|\$|\?|:|"|-[0adFiIlpv])</expression>
            <capture number="1" name="punctuation.definition.variable.ruby"/>
        </zone>
        <zone name="meta.environment-variable.ruby">
            <starts-with>
                <expression>\b(ENV)\[</expression>
                <capture number="1" name="variable.other.constant.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\]</expression>
            </ends-with>
            <subzones>
                <include syntax="$self"/>
            </subzones>
        </zone>
        <zone name="support.class.ruby">
            <expression>\b[A-Z]\w*(?=((\.|::)[A-Za-z]|\[))</expression>
        </zone>
        <zone name="variable.other.constant.ruby">
            <expression>\b[A-Z]\w*\b</expression>
        </zone>
        <zone name="meta.function.method.with-arguments.ruby">
            <starts-with>
                <expression>(?x)
			         (?=def\b)                                                      # an optimization to help Oniguruma fail fast
			         (?&lt;=^|\s)(def)\s+                                              # the def keyword
			         ( (?>[a-zA-Z_]\w*(?>\.|::))?                                   # a method name prefix
			           (?>[a-zA-Z_]\w*(?>[?!]|=(?!>))?                              # the method name
			           |===?|>[>=]?|&lt;=>|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?) )  # …or an operator method
			         \s*(\()                                                        # the openning parenthesis for arguments
			        </expression>
                <capture number="1" name="keyword.control.def.ruby"/>
                <capture number="2" name="entity.name.function.ruby"/>
                <capture number="3" name="punctuation.definition.parameters.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\)</expression>
                <capture number="0" name="punctuation.definition.parameters.ruby"/>
            </ends-with>
            <subzones name="variable.parameter.function.ruby">
                <include syntax="$self"/>
            </subzones>
        </zone>
        <zone name="meta.function.method.with-arguments.ruby">
            <starts-with>
                <expression>(?x)
			         (?=def\b)                                                      # an optimization to help Oniguruma fail fast
			         (?&lt;=^|\s)(def)\s+                                              # the def keyword
			         ( (?>[a-zA-Z_]\w*(?>\.|::))?                                   # a method name prefix
			           (?>[a-zA-Z_]\w*(?>[?!]|=(?!>))?                              # the method name
			           |===?|>[>=]?|&lt;=>|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?) )  # …or an operator method
			         [ \t]                                                          # the space separating the arguments
			        </expression>
                <capture number="1" name="keyword.control.def.ruby"/>
                <capture number="2" name="entity.name.function.ruby"/>
            </starts-with>
            <ends-with>
                <expression>$</expression>
            </ends-with>
            <subzones name="variable.parameter.function.ruby">
                <include syntax="$self"/>
            </subzones>
        </zone>
        <zone name="meta.function.method.without-arguments.ruby">
            <expression>(?x)
			         (?=def\b)                                                           # an optimization to help Oniguruma fail fast
			         (?&lt;=^|\s)(def)\b                                                    # the def keyword
			         ( \s+                                                               # an optional group of whitespace followed by…
			           ( (?>[a-zA-Z_]\w*(?>\.|::))?                                      # a method name prefix
			             (?>[a-zA-Z_]\w*(?>[?!]|=(?!>))?                                 # the method name
			             |===?|>[>=]?|&lt;=>|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?) ) )?  # …or an operator method
			        </expression>
            <capture number="1" name="keyword.control.def.ruby"/>
            <capture number="3" name="entity.name.function.ruby"/>
        </zone>
        <zone name="constant.numeric.ruby">
            <expression>\b(0[xX]\h(?>_?\h)*|\d(?>_?\d)*(\.(?![^[:space:][:digit:]])(?>_?\d)*)?([eE][-+]?\d(?>_?\d)*)?|0[bB][01]+)\b</expression>
        </zone>
        <zone name="constant.other.symbol.single-quoted.ruby">
            <starts-with>
                <expression>:'</expression>
                <capture number="0" name="punctuation.definition.constant.ruby"/>
            </starts-with>
            <ends-with>
                <expression>'</expression>
                <capture number="0" name="punctuation.definition.constant.ruby"/>
            </ends-with>
            <subzones>
                <zone name="constant.character.escape.ruby">
                    <expression>\\['\\]</expression>
                </zone>
            </subzones>
        </zone>
        <zone name="constant.other.symbol.double-quoted.ruby">
            <starts-with>
                <expression>:"</expression>
                <capture number="0" name="punctuation.definition.constant.ruby"/>
            </starts-with>
            <ends-with>
                <expression>"</expression>
                <capture number="0" name="punctuation.definition.constant.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.quoted.single.ruby">
            <starts-with>
                <expression>'</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>'</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <zone name="constant.character.escape.ruby">
                    <expression>\\'|\\\\</expression>
                </zone>
            </subzones>
        </zone>
        <zone name="string.quoted.double.ruby">
            <starts-with>
                <expression>"</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>"</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.interpolated.ruby">
            <starts-with>
                <expression>`</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>`</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.interpolated.ruby">
            <starts-with>
                <expression>%x\{</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\}</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_curly_i"/>
            </subzones>
        </zone>
        <zone name="string.interpolated.ruby">
            <starts-with>
                <expression>%x\[</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\]</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_brackets_i"/>
            </subzones>
        </zone>
        <zone name="string.interpolated.ruby">
            <starts-with>
                <expression>%x\&lt;</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\></expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_ltgt_i"/>
            </subzones>
        </zone>
        <zone name="string.interpolated.ruby">
            <starts-with>
                <expression>%x\(</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\)</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_parens_i"/>
            </subzones>
        </zone>
        <zone name="string.interpolated.ruby">
            <starts-with>
                <expression>%x([^\w])</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\1</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone>
            <starts-with>
                <expression>(?x)
			   (?:
			     ^                      # beginning of line
			   | (?&lt;=                   # or look-behind on:
			       [=>~(?:\[,|&amp;;]
			     | [\s;]if\s			# keywords
			     | [\s;]elsif\s
			     | [\s;]while\s
			     | [\s;]unless\s
			     | [\s;]when\s
			     | [\s;]assert_match\s
			     | [\s;]or\s			# boolean opperators
			     | [\s;]and\s
			     | [\s;]not\s
			     | [\s.]index\s			# methods
			     | [\s.]scan\s
			     | [\s.]sub\s
			     | [\s.]sub!\s
			     | [\s.]gsub\s
			     | [\s.]gsub!\s
			     | [\s.]match\s
			     )
			   | (?&lt;=                  # or a look-behind with line anchor:
			        ^when\s            # duplication necessary due to limits of regex
			      | ^if\s
			      | ^elsif\s
			      | ^while\s
			      | ^unless\s
			      )
			   )
			   \s*((/))(?![*+{}?])
			</expression>
                <capture number="1" name="string.regexp.classic.ruby"/>
                <capture number="2" name="punctuation.definition.string.ruby"/>
            </starts-with>
            <ends-with>
                <expression>((/[eimnosux]*))</expression>
                <capture number="1" name="string.regexp.classic.ruby"/>
                <capture number="2" name="punctuation.definition.string.ruby"/>
            </ends-with>
            <subzones name="string.regexp.classic.ruby">
                <include collection="regex_sub"/>
            </subzones>
        </zone>
        <zone name="string.regexp.mod-r.ruby">
            <starts-with>
                <expression>%r\{</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\}[eimnosux]*</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="regex_sub"/>
                <include collection="nest_curly_r"/>
            </subzones>
        </zone>
        <zone name="string.regexp.mod-r.ruby">
            <starts-with>
                <expression>%r\[</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\][eimnosux]*</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="regex_sub"/>
                <include collection="nest_brackets_r"/>
            </subzones>
        </zone>
        <zone name="string.regexp.mod-r.ruby">
            <starts-with>
                <expression>%r\(</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\)[eimnosux]*</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="regex_sub"/>
                <include collection="nest_parens_r"/>
            </subzones>
        </zone>
        <zone name="string.regexp.mod-r.ruby">
            <starts-with>
                <expression>%r\&lt;</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\>[eimnosux]*</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="regex_sub"/>
                <include collection="nest_ltgt_r"/>
            </subzones>
        </zone>
        <zone name="string.regexp.mod-r.ruby">
            <starts-with>
                <expression>%r([^\w])</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\1[eimnosux]*</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="regex_sub"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.upper.ruby">
            <starts-with>
                <expression>%[QWSR]?\(</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\)</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_parens_i"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.upper.ruby">
            <starts-with>
                <expression>%[QWSR]?\[</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\]</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_brackets_i"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.upper.ruby">
            <starts-with>
                <expression>%[QWSR]?\&lt;</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\></expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_ltgt_i"/>
            </subzones>
        </zone>
        <zone name="string.quoted.double.ruby.mod">
            <starts-with>
                <expression>%[QWSR]?\{</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\}</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
                <include collection="nest_curly_i"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.upper.ruby">
            <starts-with>
                <expression>%[QWSR]([^\w])</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\1</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.other.ruby">
            <starts-with>
                <expression>%([^\w\s=])</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\1</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.lower.ruby">
            <starts-with>
                <expression>%[qws]\(</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\)</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <zone name="constant.character.escape.ruby">
                    <expression>\\\)|\\\\</expression>
                </zone>
                <include collection="nest_parens"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.lower.ruby">
            <starts-with>
                <expression>%[qws]\&lt;</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\></expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <zone name="constant.character.escape.ruby">
                    <expression>\\\>|\\\\</expression>
                </zone>
                <include collection="nest_ltgt"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.lower.ruby">
            <starts-with>
                <expression>%[qws]\[</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\]</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <zone name="constant.character.escape.ruby">
                    <expression>\\\]|\\\\</expression>
                </zone>
                <include collection="nest_brackets"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.lower.ruby">
            <starts-with>
                <expression>%[qws]\{</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\}</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <zone name="constant.character.escape.ruby">
                    <expression>\\\}|\\\\</expression>
                </zone>
                <include collection="nest_curly"/>
            </subzones>
        </zone>
        <zone name="string.quoted.other.literal.lower.ruby">
            <starts-with>
                <expression>%[qws]([^\w])</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\1</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <zone>
                    <expression>\\.</expression>
                </zone>
            </subzones>
        </zone>
        <zone name="constant.other.symbol.ruby">
            <expression>(?&lt;!:)(:)(?>[a-zA-Z_]\w*(?>[?!]|=(?![>=]))?|===?|>[>=]?|&lt;[&lt;=]?|&lt;=>|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?|@@?[a-zA-Z_]\w*)</expression>
            <capture number="1" name="punctuation.definition.constant.ruby"/>
        </zone>
        <zone name="comment.block.documentation.ruby">
            <starts-with>
                <expression>^=begin</expression>
                <capture number="0" name="punctuation.definition.comment.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^=end</expression>
                <capture number="0" name="punctuation.definition.comment.ruby"/>
            </ends-with>
        </zone>
        <zone name="comment.line.number-sign.ruby">
            <expression>(?:^[ \t]+)?(#).*$\n?</expression>
            <capture number="1" name="punctuation.definition.comment.ruby"/>
        </zone>
        <zone name="constant.numeric.ruby">
            <expression>(?&lt;!\w)\?(\\(x\h{1,2}(?!\h)\b|0[0-7]{0,2}(?![0-7])\b|[^x0MC])|(\\[MC]-)+\w|[^\s\\])</expression>
        </zone>
        <zone>
            <starts-with>
                <expression>^__END__\n</expression>
                <capture number="0" name="string.unquoted.program-block.ruby"/>
            </starts-with>
            <ends-with>
                <expression>(?=not)impossible</expression>
                <capture number="0" name="string.unquoted.program-block.ruby"/>
            </ends-with>
            <subzones name="text.plain">
                <zone name="text.html.embedded.ruby">
                    <starts-with>
                        <expression>(?=&lt;?xml|&lt;(?i:html\b)|!DOCTYPE (?i:html\b))</expression>
                    </starts-with>
                    <ends-with>
                        <expression>(?=not)impossible</expression>
                    </ends-with>
                    <subzones>
                        <include syntax="text.html.basic"/>
                    </subzones>
                </zone>
            </subzones>
        </zone>
        <zone name="string.unquoted.heredoc.ruby">
            <starts-with>
                <expression>(?>\=\s*&lt;&lt;(\w+))(?!\s+#\s*([Cc]|sh|[Jj]ava))</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.html.ruby">
            <starts-with>
                <expression>(?>&lt;&lt;-HTML\b)</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\s*HTML$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones name="text.html.embedded.ruby">
                <include collection="heredoc"/>
                <include syntax="text.html.basic"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.sql.ruby">
            <starts-with>
                <expression>(?>&lt;&lt;-SQL\b)</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\s*SQL$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones name="text.sql.embedded.ruby">
                <include collection="heredoc"/>
                <include syntax="source.sql"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.ruby.ruby">
            <starts-with>
                <expression>(?>&lt;&lt;-(["\\']?)(\w+_(?i:eval))\1)</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\s*\2$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include collection="interpolated_ruby"/>
                <include syntax="source.ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.heredoc.ruby">
            <starts-with>
                <expression>(?>&lt;&lt;-(\w+))</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>\s*\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.c.ruby">
            <starts-with>
                <expression>(?>\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Cc](?!(\+\+|[Ss][Ss])))</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include syntax="source.c"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.cplusplus.ruby">
            <starts-with>
                <expression>(?>\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Cc]\+\+)</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include syntax="source.c++"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.css.ruby">
            <starts-with>
                <expression>(?>\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Cc][Ss][Ss])</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include syntax="source.css"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.js.ruby">
            <starts-with>
                <expression>(?>\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Jj]ava[Ss]cript)</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include syntax="source.js"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone name="string.unquoted.embedded.shell.ruby">
            <starts-with>
                <expression>(?>\=\s*&lt;&lt;(\w+))(?=\s+#\s*sh)</expression>
                <capture number="0" name="punctuation.definition.string.begin.ruby"/>
            </starts-with>
            <ends-with>
                <expression>^\1$</expression>
                <capture number="0" name="punctuation.definition.string.end.ruby"/>
            </ends-with>
            <subzones>
                <include collection="heredoc"/>
                <include syntax="source.shell"/>
                <include collection="interpolated_ruby"/>
                <include collection="escaped_char"/>
            </subzones>
        </zone>
        <zone>
            <starts-with>
                <expression>(?&lt;=\{|do|\{\s|do\s)(\|)</expression>
                <capture number="1" name="punctuation.separator.variable.ruby"/>
            </starts-with>
            <ends-with>
                <expression>(\|)</expression>
                <capture number="1" name="punctuation.separator.variable.ruby"/>
            </ends-with>
            <subzones>
                <zone name="variable.other.block.ruby">
                    <expression>[_a-zA-Z][_a-zA-Z0-9]*</expression>
                </zone>
                <zone name="punctuation.separator.variable.ruby">
                    <expression>,</expression>
                </zone>
            </subzones>
        </zone>
        <zone name="punctuation.separator.key-value">
            <expression>=></expression>
        </zone>
        <zone name="keyword.operator.assignment.augmented.ruby">
            <expression>&lt;&lt;=|%=|&amp;=|\*=|\*\*=|\+=|\-=|\^=|\|{1,2}=|/=|&lt;&lt;</expression>
        </zone>
        <zone name="keyword.operator.comparison.ruby">
            <expression>&lt;=>|&lt;(?!&lt;|=)|>(?!&lt;|=|>)|&lt;=|>=|===|==|=~|!=|!~|(?&lt;=[ \t])\?</expression>
        </zone>
        <zone name="keyword.operator.logical.ruby">
            <expression>(?&lt;=[ \t])!+|\bnot\b|&amp;&amp;|\band\b|\|\||\bor\b|\^</expression>
        </zone>
        <zone name="keyword.operator.arithmetic.ruby">
            <expression>(%|&amp;|\*\*|\*|\+|\-|/)</expression>
        </zone>
        <zone name="keyword.operator.assignment.ruby">
            <expression>=</expression>
        </zone>
        <zone name="keyword.operator.other.ruby">
            <expression>\||~|>></expression>
        </zone>
        <zone name="punctuation.separator.other.ruby">
            <expression>:</expression>
        </zone>
        <zone name="punctuation.separator.statement.ruby">
            <expression>\;</expression>
        </zone>
        <zone name="punctuation.separator.object.ruby">
            <expression>,</expression>
        </zone>
        <zone name="punctuation.separator.method.ruby">
            <expression>\.|::</expression>
        </zone>
        <zone name="punctuation.section.scope.ruby">
            <expression>\{|\}</expression>
        </zone>
        <zone name="punctuation.section.array.ruby">
            <expression>\[|\]</expression>
        </zone>
        <zone name="punctuation.section.function.ruby">
            <expression>\(|\)</expression>
        </zone>
    </zones>
    <library>
        <collection name="escaped_char">
            <zone name="constant.character.escape.ruby">
                <expression>\\(?:0\d{1,2}|x[\da-fA-F]{1,2}|.)</expression>
            </zone>
        </collection>
        <collection name="heredoc">
            <zone>
                <starts-with>
                    <expression>^&lt;&lt;-?\w+</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subzones>
                    <include syntax="$self"/>
                </subzones>
            </zone>
        </collection>
        <collection name="interpolated_ruby">
            <zone name="source.ruby.embedded.source">
                <expression>#\{(\})</expression>
                <capture number="0" name="punctuation.section.embedded.ruby"/>
                <capture number="1" name="source.ruby.embedded.source.empty"/>
            </zone>
            <zone name="source.ruby.embedded.source">
                <starts-with>
                    <expression>#\{</expression>
                    <capture number="0" name="punctuation.section.embedded.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="punctuation.section.embedded.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="nest_curly_and_self"/>
                    <include syntax="$self"/>
                </subzones>
            </zone>
            <zone name="variable.other.readwrite.instance.ruby">
                <expression>(#@)[a-zA-Z_]\w*</expression>
                <capture number="1" name="punctuation.definition.variable.ruby"/>
            </zone>
            <zone name="variable.other.readwrite.class.ruby">
                <expression>(#@@)[a-zA-Z_]\w*</expression>
                <capture number="1" name="punctuation.definition.variable.ruby"/>
            </zone>
            <zone name="variable.other.readwrite.global.ruby">
                <expression>(#\$)[a-zA-Z_]\w*</expression>
                <capture number="1" name="punctuation.definition.variable.ruby"/>
            </zone>
        </collection>
        <collection name="nest_brackets">
            <zone>
                <starts-with>
                    <expression>\[</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="nest_brackets"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_brackets_i">
            <zone>
                <starts-with>
                    <expression>\[</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="interpolated_ruby"/>
                    <include collection="escaped_char"/>
                    <include collection="nest_brackets_i"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_brackets_r">
            <zone>
                <starts-with>
                    <expression>\[</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="regex_sub"/>
                    <include collection="nest_brackets_r"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_curly">
            <zone>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="nest_curly"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_curly_and_self">
            <zone>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="nest_curly_and_self"/>
                </subzones>
            </zone>
            <include syntax="$self"/>
        </collection>
        <collection name="nest_curly_i">
            <zone>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="interpolated_ruby"/>
                    <include collection="escaped_char"/>
                    <include collection="nest_curly_i"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_curly_r">
            <zone>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="regex_sub"/>
                    <include collection="nest_curly_r"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_ltgt">
            <zone>
                <starts-with>
                    <expression>\&lt;</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\></expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="nest_ltgt"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_ltgt_i">
            <zone>
                <starts-with>
                    <expression>\&lt;</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\></expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="interpolated_ruby"/>
                    <include collection="escaped_char"/>
                    <include collection="nest_ltgt_i"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_ltgt_r">
            <zone>
                <starts-with>
                    <expression>\&lt;</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\></expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="regex_sub"/>
                    <include collection="nest_ltgt_r"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_parens">
            <zone>
                <starts-with>
                    <expression>\(</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="nest_parens"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_parens_i">
            <zone>
                <starts-with>
                    <expression>\(</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="interpolated_ruby"/>
                    <include collection="escaped_char"/>
                    <include collection="nest_parens_i"/>
                </subzones>
            </zone>
        </collection>
        <collection name="nest_parens_r">
            <zone>
                <starts-with>
                    <expression>\(</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="punctuation.section.scope.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="regex_sub"/>
                    <include collection="nest_parens_r"/>
                </subzones>
            </zone>
        </collection>
        <collection name="regex_sub">
            <include collection="interpolated_ruby"/>
            <include collection="escaped_char"/>
            <zone name="string.regexp.arbitrary-repitition.ruby">
                <expression>(\{)\d+(,\d+)?(\})</expression>
                <capture number="1" name="punctuation.definition.arbitrary-repitition.ruby"/>
                <capture number="3" name="punctuation.definition.arbitrary-repitition.ruby"/>
            </zone>
            <zone name="string.regexp.character-class.ruby">
                <starts-with>
                    <expression>\[(?:\^?\])?</expression>
                    <capture number="0" name="punctuation.definition.character-class.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="punctuation.definition.character-class.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="escaped_char"/>
                </subzones>
            </zone>
            <zone name="string.regexp.group.ruby">
                <starts-with>
                    <expression>\(</expression>
                    <capture number="0" name="punctuation.definition.group.ruby"/>
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="punctuation.definition.group.ruby"/>
                </ends-with>
                <subzones>
                    <include collection="regex_sub"/>
                </subzones>
            </zone>
            <zone name="comment.line.number-sign.ruby">
                <expression>(?&lt;=^|\s)(#)\s[[a-zA-Z0-9,. \t?!-][^\x{00}-\x{7F}]]*$</expression>
                <capture number="1" name="punctuation.definition.comment.ruby"/>
            </zone>
        </collection>
    </library>
</syntax>